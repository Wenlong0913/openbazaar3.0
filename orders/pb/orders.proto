syntax = "proto3";
option go_package = "pb";

import "google/protobuf/timestamp.proto";
import "countrycodes.proto";
import "listing.proto";
import "common.proto";

message OrderOpen {
    repeated SignedListing listings     = 1;
    string refundAddress                = 2;
    Shipping shipping                   = 3;
    ID buyerID                          = 4;
    google.protobuf.Timestamp timestamp = 5;
    repeated Item items                 = 6;
    Payment payment                     = 7;
    repeated bytes ratingKeys           = 8;
    string alternateContactInfo         = 9;

    message Shipping {
        string shipTo       = 1;
        string address      = 2;
        string city         = 3;
        string state        = 4;
        string postalCode   = 5;
        CountryCode country = 6;
        string addressNotes = 7;
    }

    message Item {
        string listingHash            = 1;
        string quantity               = 2;
        repeated Option options       = 3;
        ShippingOption shippingOption = 4;
        string memo                   = 5;
        repeated string couponCodes   = 6;
        string paymentAddress         = 7;

        message Option {
            string name  = 1;
            string value = 2;
        }

        message ShippingOption {
            string name    = 1;
            string service = 2;
        }
    }

    message Payment {
        Method method           = 1;
        string moderator        = 2;
        string amount           = 3; // Satoshis
        string chaincode        = 4; // Hex encoded
        string address          = 5; // B58check encoded
        string script           = 6; // Hex encoded, usually redeem script.
        bytes  moderatorKey     = 7;
        string coin             = 8;
        string escrowReleaseFee = 9;

        enum Method {
            DIRECT     = 0; // Address request
            CANCELABLE = 1; // 1 of 2 cancelable address
            MODERATED  = 2; // 2 of 3 escrow address
        }
    }
}

message OrderReject {
    RejectType type        = 1;
    string reason          = 2;

    enum RejectType {
        USER_REJECT      = 0;
        VALIDATION_ERROR = 1;
    }
}

message OrderConfirmation {
    string transactionID   = 1; // Only cancelable orders.
}

message OrderCancel {
    string transactionID   = 1; // Only cancelable orders.
}

message RatingSignatures {
    repeated RatingSignature sigs = 1;

    message RatingSignature {
        string     slug       = 1;
        bytes ratingKey       = 2;
        bytes vendorSignature = 3; // The signature covers the serialization of this object with the signature emptied.
    }
}

message OrderFulfillment {}
message OrderComplete {}
message DisputeOpen {}
message DisputeUpdate {}
message DisputeClose {
    string transactionID = 1;
}

message Refund {
    oneof refundInfo {
        string transactionID      = 1;
        EscrowRelease releaseInfo = 2;
    }
    string amount = 3;

    message EscrowRelease {
        repeated Signature escrowSignatures = 1;
        repeated bytes fromIDs              = 2;
        string toAddress                    = 3;
        string toAmount                     = 4;
    }

    message Signature {
        bytes from      = 1;
        bytes signature = 2;
        uint32 index    = 3;
    }
}

message PaymentSent {
    string transactionID = 1;
}

message PaymentFinalized {}

message PaymentSentList {
    repeated PaymentSent messages = 1;
}

message RefundList {
    repeated Refund messages = 1;
}